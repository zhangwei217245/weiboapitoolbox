<?xml version="1.0" encoding="UTF-8"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
    <globalParameters>
        <parameter key="consumerKey" value="1852823608"/>
        <parameter key="consumerSecret" value="f7623417c5fbe029dd366e4e01e34e48"/>
        <Accounts>
            <account id="A">
                <uid>1803876591</uid>
                <screenName>LoopA</screenName>
                <name>loopa@sina.cn</name>
                <password>123456</password>
                <oauth_token>07ab6a78fcc18a624a472a1bc7c274e7</oauth_token>
                <oauth_secret>a66c4cc49a652d2c981bbda82bd9a746</oauth_secret>
            </account>
            <account id="B">
                <uid>1803880061</uid>
                <screenName>LoopB</screenName>
                <name>loopb@sina.cn</name>
                <password>123456</password>
                <oauth_token>76eee405d795677482af833a118c7664</oauth_token>
                <oauth_secret>309d81204c4f94ed1710461cdd329229</oauth_secret>
            </account>
            <account id="C">
                <uid>1803888563</uid>
                <screenName>LoopC</screenName>
                <name>loopc@sina.cn</name>
                <password>123456</password>
                <oauth_token>4698b31925b713c25052f508d22ceeb2</oauth_token>
                <oauth_secret>e9692337cef02a775e05aed4f3a3471f</oauth_secret>
            </account>
            <account id="D">
                <uid>1803882341</uid>
                <screenName>LoopD</screenName>
                <name>loopd@sina.cn</name>
                <password>123456</password>
                <oauth_token>aa1ae9d4f2a23a3c44c137ca8586cfa3</oauth_token>
                <oauth_secret>4e6cded8fef0fb492715e429bec39292</oauth_secret>
            </account>
      
        </Accounts>
    </globalParameters>
    <testCases>
  	
        <baseUrl>http://api.t.sina.com.cn</baseUrl>
	
        <testCase format="XML" id="1" priority="H">
            <description>测试微博的发表、删除</description>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>发表一篇微博</reqdesc>
                <url>statuses/update</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="status" value="${random:string(5)}"/>
                </parameters>
                <valuesKeeping>
                    <expression sessionKey="status_0" path="status/text/text()"></expression>
                    <expression sessionKey="status_id_0" path="status/id/text()"></expression>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="status/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:status}</expectedValue>
                        <errorMsg>返回的微博文本与发表的微博文本不一致</errorMsg>
                    </condition>
                </assertConditions>
            </request>
      
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>根据ID验证微博</reqdesc>
                <url>statuses/show/${session:status_id_0}</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="status/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>根据ID查到的微博文本和发表的微博文本不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="status/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>根据ID查到的微博ID和发表的微博ID不一致</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>判断当前用户发表的微博列表中是否已存在刚发布的微博</reqdesc>
                <url>statuses/user_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="statuses/status/text/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>当前用户的微博列表中找不到刚发布的微博文本</errorMsg>
                    </condition>
                    <condition>
                        <path type="M" value="statuses/status/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>当前用户的微博列表中找不到刚发布的微博ID</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>根据ID删除微博</reqdesc>
                <url>statuses/destroy/${session:status_id_0}</url>
                <method>DELETE</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="status/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>返回的微博文本与被删除的微博文本不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="status/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>返回的微博ID与被删除的微博ID不一致</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest"  delayedTime="180000">
                <reqdesc>根据ID查找微博</reqdesc>
                <url>statuses/show/${session:status_id_0}</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="hash/error_code/text()"></path>
                        <relation>eq</relation>
                        <expectedValue>400</expectedValue>
                        <errorMsg>删除微博后根据ID查找被删除微博状态码不为400</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="hash/error/text()"></path>
                        <relation>contains</relation>
                        <expectedValue>target weibo does not exist</expectedValue>
                        <errorMsg>根据ID查找被删除微博没有提示目标微博不存在的信息</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>判断当前用户发表的微博列表中是否还存在刚发布的微博</reqdesc>
                <url>statuses/user_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="statuses/status/text/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>被删除的微博文本仍然出现在当前用户的微博列表内</errorMsg>
                    </condition>
                    <condition>
                        <path type="M" value="statuses/status/id/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>被删除的微博ID仍然出现在当前用户的微博列表内</errorMsg>
                    </condition>
                </assertConditions>
            </request>
      
        </testCase>
	
        <testCase format="JSON" id="2" priority="H">
            <description>测试微博的发表、删除</description>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest"  block_on_error="true">
                <reqdesc>发表一篇微博</reqdesc>
                <url>statuses/update</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="status" value="${random:string(5)}"/>
                </parameters>
                <valuesKeeping>
                    <expression sessionKey="status_0" path="$.text"></expression>
                    <expression sessionKey="status_id_0" path="$.id"></expression>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.text"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:status}</expectedValue>
                        <errorMsg>返回的微博文本与发表的微博文本不一致</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>根据ID验证微博</reqdesc>
                <url>statuses/show/${session:status_id_0}</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.text"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>根据ID查到的微博文本和发表的微博文本不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>根据ID查到的微博ID和发表的微博ID不一致</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>判断当前用户发表的微博列表中是否已存在刚发布的微博</reqdesc>
                <url>statuses/user_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>contains</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>当前用户的微博列表中找不到刚发布的微博文本</errorMsg>
                    </condition>
                    <condition>
                        <path type="M" value="$[n].id"/>
                        <relation>contains</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>当前用户的微博列表中找不到刚发布的微博ID</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>根据ID删除微博</reqdesc>
                <url>statuses/destroy/${session:status_id_0}</url>
                <method>DELETE</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.text"/>
                        <relation>contains</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>返回的微博文本与被删除的微博文本不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>contains</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>返回的微博ID与被删除的微博ID不一致</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>根据ID查找微博</reqdesc>
                <url>statuses/show/${session:status_id_0}</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.error_code"/>
                        <relation>eq</relation>
                        <expectedValue>400</expectedValue>
                        <errorMsg>删除微博后根据ID查找被删除微博状态码不为400</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.error"/>
                        <relation>contains</relation>
                        <expectedValue>target weibo does not exist</expectedValue>
                        <errorMsg>根据ID查找被删除微博没有提示目标微博不存在的信息</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>判断当前用户发表的微博列表中是否还存在刚发布的微博</reqdesc>
                <url>statuses/user_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                        <errorMsg>被删除的微博文本仍然出现在当前用户的微博列表内</errorMsg>
                    </condition>
                    <condition>
                        <path type="M" value="$[n].id"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                        <errorMsg>被删除的微博ID仍然出现在当前用户的微博列表内</errorMsg>
                    </condition>
                </assertConditions>
            </request>
        </testCase>

        <testCase id="3" format="XML" priority="H">
            <description>测试评论的发表删除</description>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>用户A发表一个待评论微博</reqdesc>
                <url>statuses/update</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="status" value="${random:string(7)}"/>
                </parameters>
                <valuesKeeping>
                    <expression path="status/id/text()" sessionKey="status_0_id"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="status/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:status}</expectedValue>
                        <errorMsg>返回的微博文本与发表的微博文本不符</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000" block_on_error="true">
                <reqdesc>用户B针对用户A刚发表的微博进行评论</reqdesc>
                <url>statuses/comment</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="${session:status_0_id}"/>
                    <parameter key="comment" value="${random:string(7)}"/>
                </parameters>
                <valuesKeeping>
                    <expression path="comment/id/text()" sessionKey="comment_0_id"/>
                    <expression path="comment/text/text()" sessionKey="comment_0_text"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="comment/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:comment}</expectedValue>
                        <errorMsg>返回的评论文本和发表的评论文本不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="comment/status/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0_id}</expectedValue>
                        <errorMsg>评论没有发表在指定的微博上</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>用户A获取刚发表的微博的评论数</reqdesc>
                <url>statuses/counts</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="ids" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="counts/count/comments/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1</expectedValue>
                        <errorMsg>被评论的微博的评论数没有变化</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户A获取刚发表的微博的评论</reqdesc>
                <url>statuses/comments</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="comments/comment/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>被评论的微博其评论列表中找不到刚发表的评论</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户B查看发表的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_by_me</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="comments/comment/text/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论者的评论列表中没有刚发表的评论</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>查看用户A收到的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="comments/comment/text/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>被评论的用户其收到的评论列表中没有刚发表的评论</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest"  block_on_error="true">
                <reqdesc>用户A删除用户B发表的评论</reqdesc>
                <url>statuses/comment_destroy/${session:comment_0_id}</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="comment/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:comment_0_id}</expectedValue>
                        <errorMsg>返回的被删除评论ID不正确</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="comment/status/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0_id}</expectedValue>
                        <errorMsg>返回的被删除评论其微博ID不正确</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>用户A获取刚发表的微博的评论数</reqdesc>
                <url>statuses/counts</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="ids" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="counts/count/comments/text()"/>
                        <relation>eq</relation>
                        <expectedValue>0</expectedValue>
                        <errorMsg>评论删除后原微博的评论数没有减少</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户A获取刚发表的微博的评论</reqdesc>
                <url>statuses/comments</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="comments/comment/text/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论删除后竟然出现在原微博的评论列表内</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户B查看发表的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_by_me</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="comments/comment/text/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论删除后居然出现在发评论者的评论列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>查看用户A收到的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="comments/comment/text/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论删除后居然出现在被评论用户的评论列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>
        </testCase>

        <testCase id="4" format="JSON" priority="H">
            <description>测试评论的发表删除</description>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest"  block_on_error="true">
                <reqdesc>用户A发表一个待评论微博</reqdesc>
                <url>statuses/update</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="status" value="${random:string(7)}"/>
                </parameters>
                <valuesKeeping>
                    <expression path="$.id" sessionKey="status_0_id"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.text"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:status}</expectedValue>
                        <errorMsg>返回的微博文本与发表的微博文本不符</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true" delayedTime="180000">
                <reqdesc>用户B针对用户A刚发表的微博进行评论</reqdesc>
                <url>statuses/comment</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="${session:status_0_id}"/>
                    <parameter key="comment" value="${random:string(7)}"/>
                </parameters>
                <valuesKeeping>
                    <expression path="$.id" sessionKey="comment_0_id"/>
                    <expression path="$.text" sessionKey="comment_0_text"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.text"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:comment}</expectedValue>
                        <errorMsg>返回的评论文本和发表的评论文本不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.status.id"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0_id}</expectedValue>
                        <errorMsg>评论没有发表在指定的微博上</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>用户A获取刚发表的微博的评论数</reqdesc>
                <url>statuses/counts</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="ids" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$[0].comments"/>
                        <relation>eq</relation>
                        <expectedValue>1</expectedValue>
                        <errorMsg>被评论的微博的评论数没有变化</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户A获取刚发表的微博的评论</reqdesc>
                <url>statuses/comments</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$[0].text"/>
                        <relation>eq</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>被评论的微博其评论列表中找不到刚发表的评论</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户B查看发表的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_by_me</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>contains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论者的评论列表中没有刚发表的评论</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>查看用户A收到的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>contains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>被评论的用户其收到的评论列表中没有刚发表的评论</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>用户A删除用户B发表的评论</reqdesc>
                <url>statuses/comment_destroy/${session:comment_0_id}</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>eq</relation>
                        <expectedValue>${session:comment_0_id}</expectedValue>
                        <errorMsg>返回的被删除评论ID不正确</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.status.id"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0_id}</expectedValue>
                        <errorMsg>返回的被删除评论其微博ID不正确</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>用户A获取刚发表的微博的评论数</reqdesc>
                <url>statuses/counts</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="ids" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$[0].comments"/>
                        <relation>eq</relation>
                        <expectedValue>0</expectedValue>
                        <errorMsg>评论删除后原微博的评论数没有减少</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户A获取刚发表的微博的评论</reqdesc>
                <url>statuses/comments</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="${session:status_0_id}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论删除后竟然出现在原微博的评论列表内</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>用户B查看发表的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_by_me</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论删除后居然出现在发评论者的评论列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>查看用户A收到的评论列表中是否包含刚刚发表的这个评论</reqdesc>
                <url>statuses/comments_timeline</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:comment_0_text}</expectedValue>
                        <errorMsg>评论删除后居然出现在被评论用户的评论列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>
        </testCase>


        <testCase id="5" format="XML" priority="H">
            <description>测试私信</description>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户D解除对账户C的关注</reqdesc>
                <url>friendships/destroy/1803888563</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="user/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的用户ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000" block_on_error="true">
                <reqdesc>账户D首先关注账户C</reqdesc>
                <url>friendships/create/1803888563</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping>
                    <expression path="user/id/text()" sessionKey="account_c_id"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="user/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的用户ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true" delayedTime="180000">
                <reqdesc>账户C给账户D发送一个私信</reqdesc>
                <url>direct_messages/new</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>C</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="1803882341"/>
                    <parameter key="text" value="${random:string(8)}"/>
                </parameters>
                <valuesKeeping>
                    <expression path="direct_message/id/text()" sessionKey="dm_0_id"/>
                    <expression path="direct_message/text/text()" sessionKey="dm_0_text"/>
                    <expression path="direct_message/sender_id/text()" sessionKey="dm_0_sender_id"/>
                    <expression path="direct_message/recipient_id/text()" sessionKey="dm_0_recipient_id"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="direct_message/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:text}</expectedValue>
                        <errorMsg>返回的私信内容与发送的私信内容不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="direct_message/sender_id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的私信发送者ID错误</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="direct_message/recipient_id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803882341</expectedValue>
                        <errorMsg>返回的私信接收者ID错误</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>账户D检测是否已经收到私信</reqdesc>
                <url>direct_messages</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="direct-messages/direct_message/text/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>接收方私信列表中没有出现刚发送过来的私信</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户C检测已发送的私信列表是否存在刚发出的私信</reqdesc>
                <url>direct_messages/sent</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="direct-messages/direct_message/text/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>发送方的已发送私信列表中没有出现刚发送的私信</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>账户D删除C发来的私信</reqdesc>
                <url>direct_messages/destroy/${session:dm_0_id}</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="direct_message/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${session:dm_0_id}</expectedValue>
                        <errorMsg>删除私信时返回的私信ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>账户D检测是否已经看不到被删除的私信</reqdesc>
                <url>direct_messages</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="direct-messages/direct_message/text/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>被删除的私信仍然出现在接收方的私信列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户C检测已发送的私信列表是否存在刚发出的私信</reqdesc>
                <url>direct_messages/sent</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="direct-messages/direct_message/text/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>被删除的私信仍出现在发送方的已发送私信列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户D解除对账户C的关注</reqdesc>
                <url>friendships/destroy/1803888563</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="user/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的用户ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>
        </testCase>

        

        <testCase id="6" format="JSON" priority="H">
            <description>测试私信</description>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户D解除对账户C的关注</reqdesc>
                <url>friendships/destroy/1803888563</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的用户ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000" block_on_error="true">
                <reqdesc>账户D首先关注账户C</reqdesc>
                <url>friendships/create/1803888563</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping>
                    <expression path="$.id" sessionKey="account_c_id"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的用户ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true" delayedTime="180000">
                <reqdesc>账户C给账户D发送一个私信</reqdesc>
                <url>direct_messages/new</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>C</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="1803882341"/>
                    <parameter key="text" value="${random:string(8)}"/>
                </parameters>
                <valuesKeeping>
                    <expression path="$.id" sessionKey="dm_0_id"/>
                    <expression path="$.text" sessionKey="dm_0_text"/>
                    <expression path="$.sender_id" sessionKey="dm_0_sender_id"/>
                    <expression path="$.recipient_id" sessionKey="dm_0_recipient_id"/>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.text"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:text}</expectedValue>
                        <errorMsg>返回的私信内容与发送的私信内容不一致</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.sender_id"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的私信发送者ID错误</errorMsg>
                    </condition>
                    <condition>
                        <path type="S" value="$.recipient_id"/>
                        <relation>eq</relation>
                        <expectedValue>1803882341</expectedValue>
                        <errorMsg>返回的私信接收者ID错误</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>账户D检测是否已经收到私信</reqdesc>
                <url>direct_messages</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>contains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>接收方私信列表中没有出现刚发送过来的私信</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户C检测已发送的私信列表是否存在刚发出的私信</reqdesc>
                <url>direct_messages/sent</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>contains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>发送方的已发送私信列表中没有出现刚发送的私信</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest"  block_on_error="true">
                <reqdesc>账户D删除C发来的私信</reqdesc>
                <url>direct_messages/destroy/${session:dm_0_id}</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>contains</relation>
                        <expectedValue>${session:dm_0_id}</expectedValue>
                        <errorMsg>删除私信时返回的私信ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>账户D检测是否已经看不到被删除的私信</reqdesc>
                <url>direct_messages</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>被删除的私信仍然出现在接收方的私信列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户C检测已发送的私信列表是否存在刚发出的私信</reqdesc>
                <url>direct_messages/sent</url>
                <method>GET</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$[n].text"/>
                        <relation>ncontains</relation>
                        <expectedValue>${session:dm_0_text}</expectedValue>
                        <errorMsg>被删除的私信仍出现在发送方的已发送私信列表中</errorMsg>
                    </condition>
                </assertConditions>
            </request>

            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>账户D解除对账户C的关注</reqdesc>
                <url>friendships/destroy/1803888563</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>D</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.id"/>
                        <relation>eq</relation>
                        <expectedValue>1803888563</expectedValue>
                        <errorMsg>返回的用户ID有误</errorMsg>
                    </condition>
                </assertConditions>
            </request>
        </testCase>

        <testCase format="XML" id="7" priority="H">
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>解除A关注B</reqdesc>
                <url>friendships/destroy</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_id" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="user/following/text()"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000" block_on_error="true">
                <reqdesc>关注用户</reqdesc>
                <url>friendships/create</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_id" value="1803880091"/>
                </parameters>
                <valuesKeeping>
                    <expression sessionKey="2nd_use_id" path="user/id/text()"></expression>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="user/following/text()"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>判断是否关注用户</reqdesc>
                <url>friendships/exists</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_a" value="1803876561"/>
                    <parameter key="user_b" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="friends/text()"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回两个用户关系的详细情况</reqdesc>
                <url>friendships/show</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="target_id" value="1803880091"/>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="relationship/source/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>1803876591</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回用户关注对象uid列表</reqdesc>
                <url>friends/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="id_list/ids/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回粉丝列表</reqdesc>
                <url>followers/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="id_list/ids/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>解除A关注B</reqdesc>
                <url>friendships/destroy</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_id" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="user/following/text()"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>判断是否关注用户</reqdesc>
                <url>friendships/exists</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_a" value="1803876561"/>
                    <parameter key="user_b" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="friends/text()"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="30000">
                <reqdesc>返回两个用户关系的详细情况</reqdesc>
                <url>friendships/show</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="target_id" value="1803880091"/>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="relationship/source/id/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>1803876591</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回用户关注对象uid列表</reqdesc>
                <url>friends/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="id_list/ids/id/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回粉丝列表</reqdesc>
                <url>followers/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="id_list/ids/id/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
        </testCase>
        <testCase format="JSON" id="8" priority="H">
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>解除A关注B</reqdesc>
                <url>friendships/destroy</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_id" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.following"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000" block_on_error="true">
                <reqdesc>关注用户</reqdesc>
                <url>friendships/create</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_id" value="1803880091"/>
                </parameters>
                <valuesKeeping>
                    <expression sessionKey="2nd_use_id" path="$.id"></expression>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.following"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="18000">
                <reqdesc>判断是否关注用户</reqdesc>
                <url>friendships/exists</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_a" value="1803876561"/>
                    <parameter key="user_b" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.friends"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回两个用户关系的详细情况</reqdesc>
                <url>friendships/show</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="target_id" value="1803880091"/>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.source.id"/>
                        <relation>contains</relation>
                        <expectedValue>1803876591</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回用户关注对象uid列表</reqdesc>
                <url>friends/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$.ids[n]"/>
                        <relation>contains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回粉丝列表</reqdesc>
                <url>followers/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$.ids[n]"/>
                        <relation>contains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>解除A关注B</reqdesc>
                <url>friendships/destroy</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_id" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.following"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>判断是否关注用户</reqdesc>
                <url>friendships/exists</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="user_a" value="1803876561"/>
                    <parameter key="user_b" value="1803880091"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.friends"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回两个用户关系的详细情况</reqdesc>
                <url>friendships/show</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="target_id" value="1803880091"/>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="$.source.id"/>
                        <relation>ncontains</relation>
                        <expectedValue>1803876591</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回用户关注对象uid列表</reqdesc>
                <url>friends/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$.ids[n]"/>
                        <relation>ncontains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>返回粉丝列表</reqdesc>
                <url>followers/ids</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="$.ids[n]"/>
                        <relation>ncontains</relation>
                        <expectedValue>1803880061</expectedValue>
                    </condition>
                </assertConditions>
            </request>
        </testCase>
        <testCase format="XML" id="9" priority="H">
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>发表一篇微博</reqdesc>
                <url>statuses/update</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="status" value="${random:string(5)}"/>
                </parameters>
                <valuesKeeping>
                    <expression sessionKey="status_0" path="status/text/text()"></expression>
                    <expression sessionKey="status_id_0" path="status/id/text()"></expression>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="S" value="status/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:status}</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000" block_on_error="true"> 
                <reqdesc>收藏微博</reqdesc>
                <url>favorites/create</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="id" value="{status_id_0}"/>
                </parameters>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="status/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>${reqParam:id}</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" delayedTime="180000">
                <reqdesc>查看收藏情况</reqdesc>
                <url>favorites</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="/statuses/statuse/id/text()"/>
                        <relation>contains</relation>
                        <expectedValue>{status_id_0}</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest" block_on_error="true">
                <reqdesc>取消收藏</reqdesc>
                <url>favorites/destroy/{status_id_0}</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="/statuses/favorited/text()"/>
                        <relation>eq</relation>
                        <expectedValue>false</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>查看收藏情况</reqdesc>
                <url>favorites</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>B</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="M" value="/statuses/statuse/id/text()"/>
                        <relation>ncontains</relation>
                        <expectedValue>{status_id_0}</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>根据ID删除微博</reqdesc>
                <url>statuses/destroy/${session:status_id_0}</url>
                <method>DELETE</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters/>
                <valuesKeeping/>
                <assertConditions>
                    <condition>
                        <path type="S" value="status/text/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_0}</expectedValue>
                    </condition>
                    <condition>
                        <path type="S" value="status/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${session:status_id_0}</expectedValue>
                    </condition>
                </assertConditions>
            </request>
        </testCase>
        <testCase format="XML" id="10" priority="H">
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>验证用户</reqdesc>
                <url>account/verify_credentials</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="M" value="/user/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803876591</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>验证用户</reqdesc>
                <url>account/rate_limit_status</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="M" value="/hash/hourly_limit/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1000</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>更新信息</reqdesc>
                <url>account/update_profile</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                    <parameter key="description" value="${random:string(15)}"></parameter>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="M" value="/user/description/text()"/>
                        <relation>eq</relation>
                        <expectedValue>${reqParam:description}</expectedValue>
                    </condition>
                </assertConditions>
            </request>
            <request requestClass="com.sina.weibo.looptest.request.CommonLoopRequest">
                <reqdesc>退出登录</reqdesc>
                <url>account/end_session</url>
                <method>POST</method>
                <authtype>BASIC</authtype>
                <accountref>A</accountref>
                <enctype>APPLICATION</enctype>
                <parameters>
                </parameters>
                <valuesKeeping>
                </valuesKeeping>
                <assertConditions>
                    <condition>
                        <path type="M" value="/user/id/text()"/>
                        <relation>eq</relation>
                        <expectedValue>1803876591</expectedValue>
                    </condition>
                </assertConditions>
            </request>
        </testCase>

    </testCases>

  
  
</config>
